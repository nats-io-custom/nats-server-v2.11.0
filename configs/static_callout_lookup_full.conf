host: 0.0.0.0
port: 4222
http_port: 8222

websocket {
  port: 8080
  no_tls: true
}

leafnodes {
  port: 7422
}

server_name: $SERVER_NAME
system_account: SYS

jetstream {
	store_dir: "/nats"
}

accounts: {
    SYS: {
    }
    AUTH: {
      users: [
          {user: auth, password: auth}
      ]
    }
    SVC: {
      jetstream: enabled
    }

}

authorization {
  # Docs 
  # https://github.com/nats-io/nats.docs/blob/master/running-a-nats-service/configuration/securing_nats/auth_callout.md#auth-callout
  # Example of implementing a custom auth server
  # https://github.com/ConnectEverything/nats-by-example/blob/main/examples/auth/callout/cli/service/main.go
  auth_callout {
    # Generated by running
    # nsc generate nkey --account
    # use this private key to sign JWTs:
    # SAAEXFSYMLINXLKR2TG5FLHCJHLU62B3SK3ESZLGP4B4XGLUNXICW3LGAY
    issuer: "ABNXLUXZG427NJ4YLMDR6HYLWCBHEOMN4TQGYGS2T5XNRUK5Y6ZG6XJ3"
    auth_users: [ auth ]
    account: AUTH
    # Generated by running
    # nsc generate nkey --curve
    # use this private key to encrypt/decrypt traffic between auth service & NATS: 
    # SXAMKSXEE3LCBT4NNMKGEDFRGGO4DDIPO5JQSPW6W5MHLZDMG6N2SKB2ZI
    #xkey: "XCND2ELXRACFDAD7CFHXHZE7QPSEHW5IKNLPM5Y2FVFS7PHU6NUDMHKR"
  }
}
# configuration of the nats based resolver

resolver {
    type: CUSTOM_LOOKUP_FULL
    # Directory in which account jwt will be stored
    dir: './jwt'
    # In order to support jwt deletion, set to true
    # If the resolver type is full delete will rename the jwt.
    # This is to allow manual restoration in case of inadvertent deletion.
    # To restore a jwt, remove the added suffix .delete and restart or send a reload signal.
    # To free up storage you must manually delete files with the suffix .delete.
    allow_delete: false
    # Interval at which a nats-server with a nats based account resolver will compare
    # it's state with one random nats based account resolver in the cluster and if needed,
    # exchange jwt and converge on the same set of jwt.
    interval: "2m"
    # limit on the number of jwt stored, will reject new jwt once limit is hit.
    limit: 1000
}